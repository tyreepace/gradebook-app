{"ast":null,"code":"var _jsxFileName = \"/Users/tygirl76/web/gradebook-app/client/src/components/Cell.js\";\nimport React from 'react';\n\nconst Cell = props => {\n  // iterate over the array and remove the student_id and _id and create a new array\n  // map over the new array and return the table Cell\n  let scores_only = [];\n  Object.keys(props).forEach(key => {\n    if (key !== 'student_id' && key !== '_id') {\n      scores_only.push(props[key]);\n    }\n  });\n  scores_only.map(score => {\n    if (score !== null) {\n      return React.createElement(\"td\", {\n        className: \"cell scores\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, score, \"%\");\n    } else {\n      return React.createElement(\"td\", {\n        className: \"cell scores\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"-\");\n    }\n  });\n};\n\nexport default Cell;","map":{"version":3,"sources":["/Users/tygirl76/web/gradebook-app/client/src/components/Cell.js"],"names":["React","Cell","props","scores_only","Object","keys","forEach","key","push","map","score"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB;AACA;AAEA,MAAIC,WAAW,GAAG,EAAlB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2BC,GAAG,IAAI;AAChC,QAAKA,GAAG,KAAK,YAAT,IAA2BA,GAAG,KAAK,KAAvC,EAA+C;AAC7CJ,MAAAA,WAAW,CAACK,IAAZ,CAAiBN,KAAK,CAACK,GAAD,CAAtB;AACD;AACF,GAJD;AAMAJ,EAAAA,WAAW,CAACM,GAAZ,CAAiBC,KAAD,IAAW;AACzB,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,aACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BA,KAA7B,MADF;AAGD,KAJD,MAIO;AACL,aACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGD;AACF,GAVD;AAWD,CAvBD;;AAyBA,eAAeT,IAAf","sourcesContent":["import React from 'react';\n\nconst Cell = (props) => {\n  // iterate over the array and remove the student_id and _id and create a new array\n  // map over the new array and return the table Cell\n\n  let scores_only = [];\n\n  Object.keys(props).forEach(key => {\n    if ((key !== 'student_id') && (key !== '_id')) {\n      scores_only.push(props[key]);\n    }\n  });\n\n  scores_only.map((score) => {\n    if (score !== null) {\n      return (\n        <td className=\"cell scores\">{score}%</td>\n      )\n    } else {\n      return (\n        <td className=\"cell scores\">-</td>\n      )\n    }\n  })\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}